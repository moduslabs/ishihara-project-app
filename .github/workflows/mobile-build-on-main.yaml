name: Platform build process

on:
  push:
    branches: [appflow-cicd]

env:
  IONIC_TOKEN: ${{ secrets.IONIC_TOKEN }}

jobs:
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    steps:
      - name: Install Ionic-Cloud
        run: curl -fsSL https://ionic.io/get-ionic-cloud-cli | bash

      - name: Trigger build Android
        run: >
            echo BUILDID=$(ionic-cloud build android debug 
            --app-id=${{ secrets.IONIC_APP_ID }} 
            --env CURRENT_VERSION_ANDROID=${{ secrets.CURRENT_VERSION_ANDROID }} 
            --commit=${{ github.sha }} --apk --apk-name=ishihara-latest.apk --json | jq -r '.buildId') >> $GITHUB_ENV

      # - name: Trigger deploy Google Play Console
      #   run: >
      #     ionic-cloud deploy android
      #     --app-id=${{ secrets.IONIC_APP_ID }}  
      #     --build-id=${{ env.BUILDID }} 
      #     --destination="TestFlight/App Store"

  # build-ios:
  #   name: Build iOS
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Install Ionic-Cloud
  #       run: curl -fsSL https://ionic.io/get-ionic-cloud-cli | bash

  #     - name: Trigger build iOS
  #       run: >
  #           echo BUILDID=$(ionic-cloud build ios app-store
  #           --app-id=${{ secrets.IONIC_APP_ID }} 
  #           --native-config=Override_BundleId
  #           --signing-cert=iOSProdCertificate
  #           --env CURRENT_VERSION_IOS=${{ secrets.CURRENT_VERSION_IOS }} 
  #           --commit=${{ github.sha }} --json | jq -r '.buildId') >> $GITHUB_ENV

  #     - name: Trigger deploy iOS
  #       run: >
  #         ionic-cloud deploy ios
  #         --app-id=${{ secrets.IONIC_APP_ID }}  
  #         --build-id=${{ env.BUILDID }} 
  #         --destination="TestFlight/App Store"
