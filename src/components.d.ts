/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Plate } from "./components/user-input/user-input";
export namespace Components {
    interface AppHome {
    }
    interface AppRoot {
    }
    interface ConfirmationPage {
    }
    interface IshButton {
        "clickHandler": (e: MouseEvent) => void;
        "disabled"?: boolean;
        "secondary"?: boolean;
        "to"?: string;
        "value": string | number;
    }
    interface IshLayout {
        "hasBack": boolean;
    }
    interface IshSlider {
    }
    interface PageOne {
    }
    interface UserInput {
        "answer": HTMLIonInputElement;
        "plate": Plate;
    }
}
declare global {
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLConfirmationPageElement extends Components.ConfirmationPage, HTMLStencilElement {
    }
    var HTMLConfirmationPageElement: {
        prototype: HTMLConfirmationPageElement;
        new (): HTMLConfirmationPageElement;
    };
    interface HTMLIshButtonElement extends Components.IshButton, HTMLStencilElement {
    }
    var HTMLIshButtonElement: {
        prototype: HTMLIshButtonElement;
        new (): HTMLIshButtonElement;
    };
    interface HTMLIshLayoutElement extends Components.IshLayout, HTMLStencilElement {
    }
    var HTMLIshLayoutElement: {
        prototype: HTMLIshLayoutElement;
        new (): HTMLIshLayoutElement;
    };
    interface HTMLIshSliderElement extends Components.IshSlider, HTMLStencilElement {
    }
    var HTMLIshSliderElement: {
        prototype: HTMLIshSliderElement;
        new (): HTMLIshSliderElement;
    };
    interface HTMLPageOneElement extends Components.PageOne, HTMLStencilElement {
    }
    var HTMLPageOneElement: {
        prototype: HTMLPageOneElement;
        new (): HTMLPageOneElement;
    };
    interface HTMLUserInputElement extends Components.UserInput, HTMLStencilElement {
    }
    var HTMLUserInputElement: {
        prototype: HTMLUserInputElement;
        new (): HTMLUserInputElement;
    };
    interface HTMLElementTagNameMap {
        "app-home": HTMLAppHomeElement;
        "app-root": HTMLAppRootElement;
        "confirmation-page": HTMLConfirmationPageElement;
        "ish-button": HTMLIshButtonElement;
        "ish-layout": HTMLIshLayoutElement;
        "ish-slider": HTMLIshSliderElement;
        "page-one": HTMLPageOneElement;
        "user-input": HTMLUserInputElement;
    }
}
declare namespace LocalJSX {
    interface AppHome {
    }
    interface AppRoot {
    }
    interface ConfirmationPage {
    }
    interface IshButton {
        "clickHandler"?: (e: MouseEvent) => void;
        "disabled"?: boolean;
        "secondary"?: boolean;
        "to"?: string;
        "value"?: string | number;
    }
    interface IshLayout {
        "hasBack"?: boolean;
    }
    interface IshSlider {
    }
    interface PageOne {
    }
    interface UserInput {
        "answer"?: HTMLIonInputElement;
        "plate"?: Plate;
    }
    interface IntrinsicElements {
        "app-home": AppHome;
        "app-root": AppRoot;
        "confirmation-page": ConfirmationPage;
        "ish-button": IshButton;
        "ish-layout": IshLayout;
        "ish-slider": IshSlider;
        "page-one": PageOne;
        "user-input": UserInput;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "confirmation-page": LocalJSX.ConfirmationPage & JSXBase.HTMLAttributes<HTMLConfirmationPageElement>;
            "ish-button": LocalJSX.IshButton & JSXBase.HTMLAttributes<HTMLIshButtonElement>;
            "ish-layout": LocalJSX.IshLayout & JSXBase.HTMLAttributes<HTMLIshLayoutElement>;
            "ish-slider": LocalJSX.IshSlider & JSXBase.HTMLAttributes<HTMLIshSliderElement>;
            "page-one": LocalJSX.PageOne & JSXBase.HTMLAttributes<HTMLPageOneElement>;
            "user-input": LocalJSX.UserInput & JSXBase.HTMLAttributes<HTMLUserInputElement>;
        }
    }
}
